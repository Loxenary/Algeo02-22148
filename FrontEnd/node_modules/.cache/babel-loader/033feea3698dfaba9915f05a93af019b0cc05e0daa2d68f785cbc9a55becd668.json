{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Auralea A S\\\\Documents\\\\SEMESTER 3\\\\ALGEO\\\\Tubes_Algeo2_IF2110\\\\FrontEnd\\\\src\\\\components\\\\DatasetUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Pagination from './Pagination';\nimport { PulseLoader } from 'react-spinners';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatasetUpload = ({\n  Data,\n  Loading,\n  setLoading\n}) => {\n  _s();\n  const [ObjArr, setObj] = useState([]);\n  const [estTime, setTime] = useState(null);\n  const [fileCount, setFileCount] = useState(0);\n  const fileInputRef = useRef(null);\n  const dataSet = () => {\n    const obj = [];\n    if (Data !== null) {\n      for (const [key, value] of Object.entries(Data)) {\n        if (key === 'Time') {\n          setTime(value);\n        } else {\n          const filename = key;\n          const imageUrl = `http://localhost:8000/datasets/${filename}`;\n          const id = uuidv4();\n          obj.push({\n            file: null,\n            id,\n            imageUrl,\n            similarities: value\n          });\n        }\n      }\n      setObj(obj);\n    }\n  };\n  useEffect(() => {\n    console.log('Data: ', Data);\n    dataSet();\n    // Call dataSet when the component mounts or when Data prop changes\n  }, [Data]);\n  function clickme(e) {\n    document.getElementById('input_images').click();\n  }\n  const handleDatasetUpload = async event => {\n    const uploadedFiles = event.target.files;\n\n    // Replace the existing files and images with the newly uploaded ones\n    const formData = new FormData();\n    for (let i = 0; i < uploadedFiles.length; i++) {\n      const file = uploadedFiles[i];\n      formData.append('dataset[]', files);\n    }\n    try {\n      const endpoint = 'http://localhost:8000/uploadDataset/';\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        // Trigger the update of images by updating the Data prop\n        console.log('Dataset uploaded successfully');\n      } else {\n        console.error('Upload Dataset Failed');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center py-14 w-full\",\n    id: \"dataset\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef\n        // onChange={handleFileChange}\n        ,\n        directory: \"\" // for Chrome\n        ,\n        webkitdirectory: \"\" // for Chrome\n        ,\n        mozdirectory: \"\" // for Firefox\n        ,\n        multiple: true\n        // type='file'\n        ,\n        className: \"form-control hidden\",\n        id: \"input_images\",\n        onChange: event => {\n          handleDatasetUpload(event);\n          setFileCount(event.target.files.length);\n        }\n        // multiple\n        ,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickme,\n      className: \"btn btn-primary w-100 mt-2 bg-[black] w-[200px] rounded-md font-medium my-6 mx-auto py-3 text-[aquamarine]\",\n      multiple: true,\n      children: \"Upload Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), fileCount > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Files upload: \", fileCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        data: ObjArr,\n        loading: Loading,\n        setLoading: setLoading,\n        time: estTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(DatasetUpload, \"lGXq7WrM2CcMGYECTD+KBy/vAC8=\");\n_c = DatasetUpload;\nexport default DatasetUpload;\nvar _c;\n$RefreshReg$(_c, \"DatasetUpload\");","map":{"version":3,"names":["React","useState","useEffect","useRef","v4","uuidv4","Pagination","PulseLoader","jsxDEV","_jsxDEV","DatasetUpload","Data","Loading","setLoading","_s","ObjArr","setObj","estTime","setTime","fileCount","setFileCount","fileInputRef","dataSet","obj","key","value","Object","entries","filename","imageUrl","id","push","file","similarities","console","log","clickme","e","document","getElementById","click","handleDatasetUpload","event","uploadedFiles","target","files","formData","FormData","i","length","append","endpoint","response","fetch","method","body","ok","error","className","children","type","ref","directory","webkitdirectory","mozdirectory","multiple","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","loading","time","_c","$RefreshReg$"],"sources":["C:/Users/Auralea A S/Documents/SEMESTER 3/ALGEO/Tubes_Algeo2_IF2110/FrontEnd/src/components/DatasetUpload.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Pagination from './Pagination';\r\nimport {PulseLoader} from 'react-spinners';\r\n\r\nconst DatasetUpload = ({ Data, Loading, setLoading}) => {\r\n  const [ObjArr, setObj] = useState([]);\r\n  const [estTime, setTime] = useState(null);\r\n  const [fileCount, setFileCount] = useState(0);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const dataSet = () => {\r\n    const obj = [];\r\n\r\n    if (Data !== null) {\r\n      for (const [key, value] of Object.entries(Data)) {\r\n        if (key === 'Time') {\r\n          setTime(value);\r\n        } else {\r\n          const filename = key;\r\n          const imageUrl = `http://localhost:8000/datasets/${filename}`;\r\n          const id = uuidv4();\r\n          obj.push({ file: null, id, imageUrl, similarities: value });\r\n        }\r\n      }\r\n      setObj(obj);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Data: ', Data);\r\n    dataSet();\r\n    // Call dataSet when the component mounts or when Data prop changes\r\n  }, [Data]);\r\n\r\n  function clickme(e) {\r\n    document.getElementById('input_images').click();\r\n  }\r\n\r\n  const handleDatasetUpload = async (event) => {\r\n   \r\n    const uploadedFiles = event.target.files;\r\n\r\n    // Replace the existing files and images with the newly uploaded ones\r\n    const formData = new FormData();\r\n    for (let i = 0; i < uploadedFiles.length; i++) {\r\n      const file = uploadedFiles[i]\r\n      formData.append('dataset[]', files);\r\n    }\r\n\r\n    try {\r\n      const endpoint = 'http://localhost:8000/uploadDataset/';\r\n      const response = await fetch(endpoint, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Trigger the update of images by updating the Data prop\r\n        console.log('Dataset uploaded successfully');\r\n      } else {\r\n        console.error('Upload Dataset Failed');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='flex flex-col justify-center items-center py-14 w-full' id='dataset'>\r\n      <form>\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          // onChange={handleFileChange}\r\n          directory=\"\"  // for Chrome\r\n          webkitdirectory=\"\"  // for Chrome\r\n          mozdirectory=\"\"  // for Firefox\r\n          multiple\r\n          // type='file'\r\n          className='form-control hidden'\r\n          id='input_images'\r\n          onChange={(event) => {\r\n            handleDatasetUpload(event);\r\n            setFileCount(event.target.files.length);\r\n          }}\r\n          // multiple\r\n          accept='image/*'\r\n        />\r\n      </form>\r\n      <button\r\n        onClick={clickme}\r\n        className='btn btn-primary w-100 mt-2 bg-[black] w-[200px] rounded-md font-medium my-6 mx-auto py-3 text-[aquamarine]'\r\n        multiple\r\n      >\r\n        Upload Dataset\r\n      </button>\r\n      {fileCount > 0 ? (\r\n        <p>Files upload: {fileCount}</p>\r\n      ) : null}\r\n      {/* Display uploaded images */}\r\n      <div>\r\n        <Pagination data={ObjArr} loading = {Loading} setLoading={setLoading} time = {estTime}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatasetUpload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}