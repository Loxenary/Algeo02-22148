{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Auralea A S\\\\Documents\\\\SEMESTER 3\\\\ALGEO\\\\Tubes_Algeo2_IF2110\\\\FrontEnd\\\\src\\\\components\\\\DatasetUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatasetUpload = ({\n  Data,\n  Loading,\n  setLoading\n}) => {\n  _s();\n  const [ObjArr, setObj] = useState([]);\n  const [estTime, setTime] = useState(null);\n  const [fileCount, setFileCount] = useState(0);\n  const dataSet = () => {\n    const obj = [];\n    if (Data !== null) {\n      for (const [key, value] of Object.entries(Data)) {\n        if (key === 'Time') {\n          setTime(value);\n        } else {\n          const filename = key;\n          const imageUrl = `http://localhost:8000/datasets/${filename}`;\n          const id = uuidv4();\n          obj.push({\n            file: null,\n            id,\n            imageUrl,\n            similarities: value\n          });\n        }\n      }\n      setObj(obj);\n    }\n  };\n  useEffect(() => {\n    console.log('Data: ', Data);\n    dataSet();\n    // Call dataSet when the component mounts or when Data prop changes\n  }, [Data]);\n  function clickme(e) {\n    document.getElementById('input_images').click();\n  }\n  const handleDatasetUpload = async event => {\n    const uploadedFiles = event.target.files;\n    const formData = new FormData();\n    for (let i = 0; i < uploadedFiles.length; i++) {\n      console.log(\"TEST\", uploadedFiles[i]);\n      formData.append('dataset', uploadedFiles[i]);\n    }\n    try {\n      const endpoint = 'http://localhost:8000/uploadDataset/';\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        body: formData,\n        mode: 'no-cors'\n      });\n      if (response.ok) {\n        // Trigger the update of images by updating the Data prop\n        console.log('Dataset uploaded successfully');\n      } else {\n        console.error('Upload Dataset Failed');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fileCounter = event => {\n    if (event.target.files.length > 0) {\n      setFileCount(event.target.files.length);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center py-14 w-full\",\n    id: \"dataset\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control hidden\",\n        id: \"input_images\",\n        directory: \"\",\n        webkitdirectory: \"\",\n        onChange: event => {\n          handleDatasetUpload(event);\n          fileCounter(event);\n        },\n        multiple: true,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickme,\n      className: \"btn btn-primary w-100 mt-2 bg-[black] w-[200px] rounded-full font-medium my-6 mx-auto py-3 text-[aquamarine]\",\n      multiple: true,\n      children: \"Upload Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), fileCount > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Files upload: \", fileCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        data: ObjArr,\n        loading: Loading,\n        setLoading: setLoading,\n        time: estTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(DatasetUpload, \"EZixjybidoFTbk2iP2ol0SdIsiQ=\");\n_c = DatasetUpload;\nexport default DatasetUpload;\nvar _c;\n$RefreshReg$(_c, \"DatasetUpload\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","Pagination","jsxDEV","_jsxDEV","DatasetUpload","Data","Loading","setLoading","_s","ObjArr","setObj","estTime","setTime","fileCount","setFileCount","dataSet","obj","key","value","Object","entries","filename","imageUrl","id","push","file","similarities","console","log","clickme","e","document","getElementById","click","handleDatasetUpload","event","uploadedFiles","target","files","formData","FormData","i","length","append","endpoint","response","fetch","method","body","mode","ok","error","fileCounter","className","children","type","directory","webkitdirectory","onChange","multiple","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","loading","time","_c","$RefreshReg$"],"sources":["C:/Users/Auralea A S/Documents/SEMESTER 3/ALGEO/Tubes_Algeo2_IF2110/FrontEnd/src/components/DatasetUpload.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Pagination from './Pagination';\r\n\r\nconst DatasetUpload = ({ Data, Loading, setLoading}) => {\r\n  const [ObjArr, setObj] = useState([]);\r\n  const [estTime, setTime] = useState(null);\r\n  const [fileCount, setFileCount] = useState(0);\r\n\r\n  const dataSet = () => {\r\n    const obj = [];\r\n    if (Data !== null) {\r\n      for (const [key, value] of Object.entries(Data)) {\r\n        if (key === 'Time') {\r\n          setTime(value);\r\n        } else {\r\n          const filename = key;\r\n          const imageUrl = `http://localhost:8000/datasets/${filename}`;\r\n          const id = uuidv4();\r\n          obj.push({ file: null, id, imageUrl, similarities: value });\r\n        }\r\n      }\r\n      setObj(obj);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('Data: ', Data);\r\n    dataSet();\r\n    // Call dataSet when the component mounts or when Data prop changes\r\n  }, [Data]);\r\n\r\n  function clickme(e) {\r\n    document.getElementById('input_images').click();\r\n  }\r\n\r\n  const handleDatasetUpload = async (event) => {\r\n   \r\n    const uploadedFiles = event.target.files;\r\n\r\n\r\n    const formData = new FormData();\r\n    for (let i = 0; i < uploadedFiles.length; i++) {\r\n      console.log(\"TEST\",uploadedFiles[i]);\r\n      formData.append('dataset', uploadedFiles[i]);\r\n    }\r\n\r\n    try {\r\n      const endpoint = 'http://localhost:8000/uploadDataset/';\r\n      const response = await fetch(endpoint, {\r\n        method: 'POST',\r\n        body: formData,\r\n        mode : 'no-cors'\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Trigger the update of images by updating the Data prop\r\n        console.log('Dataset uploaded successfully');\r\n      } else {\r\n        console.error('Upload Dataset Failed');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } \r\n  };\r\n\r\n  const fileCounter = (event) => {\r\n    if(event.target.files.length > 0){\r\n      setFileCount(event.target.files.length);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='flex flex-col justify-center items-center py-14 w-full' id='dataset'>\r\n      <form>\r\n        <input\r\n          type='file'\r\n          className='form-control hidden'\r\n          id='input_images'\r\n          directory =\"\"\r\n          webkitdirectory = \"\"\r\n          onChange={(event) => {\r\n            handleDatasetUpload(event);\r\n            fileCounter(event);\r\n          }}\r\n          multiple\r\n          accept='image/*'\r\n        />\r\n      </form>\r\n      <button\r\n        onClick={clickme}\r\n        className='btn btn-primary w-100 mt-2 bg-[black] w-[200px] rounded-full font-medium my-6 mx-auto py-3 text-[aquamarine]'\r\n        multiple\r\n      >\r\n        Upload Dataset\r\n      </button>\r\n      {fileCount > 0 ? (\r\n        <p>Files upload: {fileCount}</p>\r\n      ) : null}\r\n      <div>\r\n        <Pagination data={ObjArr} loading = {Loading} setLoading={setLoading} time = {estTime}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatasetUpload;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}